### github action to publish a debug
##
name: "debug"

## Controls when the workflow will run
on:
  # push:
  #   branches: [ github-action ]

  ## Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

## A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  debug:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: "checkout"
        # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
        uses: actions/checkout@v2

      - name: "install ghostscript"
        run: sudo apt-get install -y ghostscript
      
      ###### multiple options for a TeX environment
      #   ##
      # - name: "setup TeX Live (via apt-get)"
      #   # old TeX Live version: 2019
      #   run: |
      #     sudo apt-get update -y || sudo apt-get update -y || sudo apt-get update -y
      #     sudo apt-get install -y texlive-latex-base || sudo apt-get install -y texlive-latex-base || sudo apt-get install -y texlive-latex-base
      #   ##
      # - name: "setup TeX Live (via DanySK)"
      #   # old TeX Live version: 2019
      #   uses: DanySK/setup-texlive-action@master
      #   with:
      #     requirements-file: .github/tex/packages.test.txt
      #   ##
      - name: "setup TeX Live (via teatimeguest)"
        uses: teatimeguest/setup-texlive-action@v2
        with:
          package-file: .github/tex/packages.test.txt
        ##
      # - name: "setup TeX Live (via paolobrasolin)"
      # #   # tlmgr needs updates and fails
      #   uses: paolobrasolin/setup-texlive-action@v1
      #   with:
      #     profile-path:  ${{ github.workspace }}/.github/tex/texlive.profile.txt
      #     packages-path: ${{ github.workspace }}/.github/tex/packages.test.txt

      # - name: "install tikz-trackschematic"
      #   run: ./build.sh --batch-mode --install-dev

      # - name: "test tikz-trackschematic"
      #   run: ./build.sh --batch-mode --test --verbose

      #   ## create varibale ${{ steps.tag.outputs.tag }}
      # - name: "get tag"
      #   id: tag
      #   uses: dawidd6/action-get-tag@v1
      #   with:
      #     # Optionally strip `v` prefix
      #     strip_v: false

      # - name: "create tikz-trackschematic package"
      #   run: ./build.sh --release ${{ steps.tag.outputs.tag }} --batch-mode

        ## opening a debug console
      - name: Setup upterm session
        uses: lhotari/action-upterm@v1
        # with:
        #   limit-access-to-actor: true
